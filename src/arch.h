/* Interpreting C++, executing the source and executable like a script */
/* By Jesse Liu < neoliu2011@gmail.com >, 2024 */
/* This file is released under LGPL2.
   See LICENSE in root directory for more details
*/

#pragma once

namespace icpp {

enum ArchType {
  Unsupported,
  X86_64,
  AArch64,
};

enum InsnType {
  // common instruction
  INSN_ABORT = 0, // invalid opcode
  INSN_HARDWARE,
  INSN_RETURN,
  INSN_SYSCALL,
  INSN_CALLREG,
  INSN_JUMPREG,

  // arm64 instruction
  INSN_ARM64_ADR,
  INSN_ARM64_ADRP,
  INSN_ARM64_LDRSWL,
  INSN_ARM64_LDRWL,
  INSN_ARM64_LDRXL,
  INSN_ARM64_LDRSL,
  INSN_ARM64_LDRDL,
  INSN_ARM64_LDRQL,

  // x86_64 instruction
  INSN_X64_MOV8RR,
  INSN_X64_MOV8RM,
  INSN_X64_MOV8MR,
  INSN_X64_MOV8MI,
  INSN_X64_MOV16RR,
  INSN_X64_MOV16RM,
  INSN_X64_MOV16MR,
  INSN_X64_MOV16MI,
  INSN_X64_MOV32RR,
  INSN_X64_MOV32RM,
  INSN_X64_MOV32MR,
  INSN_X64_MOV32MI,
  INSN_X64_MOV64RR,
  INSN_X64_MOV64RM,
  INSN_X64_MOV64MR,
  INSN_X64_MOV64MI32,
  INSN_X64_LEA32,
  INSN_X64_LEA64,
  INSN_X64_MOVAPSRM,
  INSN_X64_MOVAPSMR,
  INSN_X64_MOVUPSRM,
  INSN_X64_MOVUPSMR,
  INSN_X64_MOVAPDRM,
  INSN_X64_MOVAPDMR,
  INSN_X64_MOVUPDRM,
  INSN_X64_MOVUPDMR,
  INSN_X64_MOVI,
  INSN_X64_MOVIMEM,
  INSN_X64_CMP8MI,
  INSN_X64_CMP8MI8,
  INSN_X64_CMP16MI,
  INSN_X64_CMP16MI8,
  INSN_X64_CMP32MI,
  INSN_X64_CMP32MI8,
  INSN_X64_CMP64MI32,
  INSN_X64_CMP64MI8,
  INSN_X64_CMP8RM,
  INSN_X64_CMP16RM,
  INSN_X64_CMP32RM,
  INSN_X64_CMP64RM,
  INSN_X64_MOVSX16RM8,
  INSN_X64_MOVSX16RM16,
  INSN_X64_MOVSX16RM32,
  INSN_X64_MOVSX32RM8,
  INSN_X64_MOVSX32RM16,
  INSN_X64_MOVSX32RM32,
  INSN_X64_MOVSX64RM8,
  INSN_X64_MOVSX64RM16,
  INSN_X64_MOVSX64RM32,
  INSN_X64_TEST8MI,
  INSN_X64_TEST8MR,
  INSN_X64_TEST16MI,
  INSN_X64_TEST16MR,
  INSN_X64_TEST32MI,
  INSN_X64_TEST32MR,
  INSN_X64_TEST64MI32,
  INSN_X64_TEST64MR,

  INSN_TYPE_MAX,
};

ArchType host_arch();

} // namespace icpp
